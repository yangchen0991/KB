# Generated by Django 4.2.7 on 2025-09-20 15:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("documents", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="TrainingDataset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="数据集名称")),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                (
                    "total_samples",
                    models.PositiveIntegerField(default=0, verbose_name="总样本数"),
                ),
                (
                    "category_distribution",
                    models.JSONField(default=dict, verbose_name="分类分布"),
                ),
                (
                    "avg_text_length",
                    models.FloatField(default=0.0, verbose_name="平均文本长度"),
                ),
                (
                    "min_samples_per_category",
                    models.PositiveIntegerField(default=0, verbose_name="每类最少样本"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "训练数据集",
                "verbose_name_plural": "训练数据集",
                "db_table": "kb_training_datasets",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ClassificationRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="规则名称")),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("keyword", "关键词匹配"),
                            ("regex", "正则表达式"),
                            ("file_type", "文件类型"),
                            ("file_name", "文件名模式"),
                        ],
                        max_length=20,
                        verbose_name="规则类型",
                    ),
                ),
                ("pattern", models.TextField(verbose_name="匹配模式")),
                (
                    "priority",
                    models.PositiveIntegerField(default=0, verbose_name="优先级"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="激活")),
                (
                    "match_count",
                    models.PositiveIntegerField(default=0, verbose_name="匹配次数"),
                ),
                ("success_rate", models.FloatField(default=0.0, verbose_name="成功率")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="documents.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "分类规则",
                "verbose_name_plural": "分类规则",
                "db_table": "kb_classification_rules",
                "ordering": ["-priority", "name"],
            },
        ),
        migrations.CreateModel(
            name="ClassificationModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="模型名称")),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                ("version", models.CharField(max_length=20, verbose_name="版本")),
                (
                    "algorithm",
                    models.CharField(
                        choices=[
                            ("naive_bayes", "朴素贝叶斯"),
                            ("svm", "支持向量机"),
                            ("random_forest", "随机森林"),
                            ("logistic_regression", "逻辑回归"),
                            ("neural_network", "神经网络"),
                        ],
                        max_length=50,
                        verbose_name="算法",
                    ),
                ),
                (
                    "model_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="ml_models/",
                        verbose_name="模型文件",
                    ),
                ),
                (
                    "vectorizer_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="ml_models/",
                        verbose_name="向量化器文件",
                    ),
                ),
                (
                    "training_params",
                    models.JSONField(default=dict, verbose_name="训练参数"),
                ),
                ("accuracy", models.FloatField(default=0.0, verbose_name="准确率")),
                ("precision", models.FloatField(default=0.0, verbose_name="精确率")),
                ("recall", models.FloatField(default=0.0, verbose_name="召回率")),
                ("f1_score", models.FloatField(default=0.0, verbose_name="F1分数")),
                (
                    "training_samples",
                    models.PositiveIntegerField(default=0, verbose_name="训练样本数"),
                ),
                (
                    "feature_count",
                    models.PositiveIntegerField(default=0, verbose_name="特征数量"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("training", "训练中"),
                            ("ready", "就绪"),
                            ("failed", "失败"),
                            ("deprecated", "已弃用"),
                        ],
                        default="training",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                ("is_active", models.BooleanField(default=False, verbose_name="激活")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "trained_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="训练完成时间"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_models",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "分类模型",
                "verbose_name_plural": "分类模型",
                "db_table": "kb_classification_models",
                "ordering": ["-created_at"],
                "unique_together": {("name", "version")},
            },
        ),
        migrations.CreateModel(
            name="ClassificationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("manual", "手动分类"),
                            ("rule", "规则分类"),
                            ("ml", "机器学习"),
                            ("hybrid", "混合方法"),
                        ],
                        max_length=20,
                        verbose_name="分类方法",
                    ),
                ),
                ("confidence", models.FloatField(default=0.0, verbose_name="置信度")),
                (
                    "is_correct",
                    models.BooleanField(default=True, verbose_name="分类正确"),
                ),
                (
                    "executed_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="执行时间"),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="元数据"),
                ),
                (
                    "actual_category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actual_documents",
                        to="documents.category",
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="classification_logs",
                        to="documents.document",
                    ),
                ),
                (
                    "executed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="classification.classificationmodel",
                    ),
                ),
                (
                    "predicted_category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="predicted_documents",
                        to="documents.category",
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="classification.classificationrule",
                    ),
                ),
            ],
            options={
                "verbose_name": "分类日志",
                "verbose_name_plural": "分类日志",
                "db_table": "kb_classification_logs",
                "ordering": ["-executed_at"],
            },
        ),
        migrations.CreateModel(
            name="TrainingSample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="文本内容")),
                (
                    "text_length",
                    models.PositiveIntegerField(default=0, verbose_name="文本长度"),
                ),
                (
                    "is_validated",
                    models.BooleanField(default=False, verbose_name="已验证"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="documents.category",
                    ),
                ),
                (
                    "dataset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="samples",
                        to="classification.trainingdataset",
                    ),
                ),
                (
                    "source_document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="documents.document",
                    ),
                ),
            ],
            options={
                "verbose_name": "训练样本",
                "verbose_name_plural": "训练样本",
                "db_table": "kb_training_samples",
                "indexes": [
                    models.Index(
                        fields=["dataset", "category"],
                        name="kb_training_dataset_439a8f_idx",
                    )
                ],
            },
        ),
    ]
